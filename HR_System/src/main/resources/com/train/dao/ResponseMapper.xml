<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.train.dao.ResponseMapper">
  <resultMap id="BaseResultMap" type="com.train.pojo.Response">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="response" jdbcType="VARCHAR" property="response" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="view" jdbcType="VARCHAR" property="view" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, response, summary, result, view
  </sql>
  <select id="selectByExample" parameterType="com.train.pojo.ResponseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_response
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteByExample" parameterType="com.train.pojo.ResponseExample">
    delete from t_response
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insertSelective" parameterType="com.train.pojo.Response">
    insert into t_response
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="response != null">
        response,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="view != null">
        view,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="response != null">
        #{response,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="view != null">
        #{view,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.train.pojo.ResponseExample" resultType="java.lang.Long">
    select count(*) from t_response
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_response
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.response != null">
        response = #{record.response,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.view != null">
        view = #{record.view,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_response
    set pid = #{record.pid,jdbcType=INTEGER},
    response = #{record.response,jdbcType=VARCHAR},
    summary = #{record.summary,jdbcType=VARCHAR},
    result = #{record.result,jdbcType=VARCHAR},
    view = #{record.view,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.train.pojo.Response">
    update t_response
    <set>
      <if test="response != null">
        response = #{response,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="view != null">
        view = #{view,jdbcType=VARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.train.pojo.Response">
    update t_response
    set response = #{response,jdbcType=VARCHAR},
    summary = #{summary,jdbcType=VARCHAR},
    result = #{result,jdbcType=VARCHAR},
    view = #{view,jdbcType=VARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>

  <!--展示审核反馈-->
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT * FROM t_response
  </select>

  <!--展示某条反馈-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_response
    where pid = #{pid,jdbcType=INTEGER}
  </select>

  <!--添加审核反馈-->
  <insert id="insert" useGeneratedKeys="true" keyProperty="pid" parameterType="com.train.pojo.Response">
    insert into t_response (response, summary,
      result, view)
    values (#{response,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR},
      #{result,jdbcType=VARCHAR}, #{view,jdbcType=VARCHAR})
  </insert>

  <!--修改审核总结-->
  <update id="UpdateSum" parameterType="com.train.pojo.Response">
    UPDATE t_response
    SET summary = #{summary,jdbcType=VARCHAR}
    WHERE pid = #{pid}
  </update>


  <!--修改审核结果-->
  <update id="UpdateRes" parameterType="com.train.pojo.Response">
    UPDATE t_response
    SET result = #{result,jdbcType=VARCHAR}
    WHERE pid = #{pid}
  </update>

  <!--修改审核意见-->
  <update id="UpdateView" parameterType="com.train.pojo.Response">
     UPDATE t_response
    SET view = #{view,jdbcType=VARCHAR}
    WHERE pid = #{pid}
  </update>

  <!--修改审核反馈内容-->
  <update id="UpdateResp" parameterType="com.train.pojo.Response">
     UPDATE t_response
    SET response = #{response,jdbcType=VARCHAR}
    WHERE pid = #{pid}
  </update>

  <!--删除某条反馈-->
  <delete id="DeleteBypId" parameterType="Integer">
    DELETE  FROM t_response WHERE pid=#{pId}
  </delete>


</mapper>